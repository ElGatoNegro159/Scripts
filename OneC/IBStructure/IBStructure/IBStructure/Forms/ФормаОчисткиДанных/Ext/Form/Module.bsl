
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не (Параметры.Свойство("ТаблицаСтруктураБД") 
			Или ТипЗнч(Параметры.ТаблицаСтруктураБД) = Тип("ДанныеФормыКоллекция")) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ТаблицаСтруктураБД.Загрузить(Параметры.ТаблицаСтруктураБД.Выгрузить());
	ТаблицаСтруктураБД.Сортировать("Метаданные");
	
	// TODO: Реализовать получение типа СУБД для текущей базы
	ТипСУБД = "MSSQL";
	
	// Список назначений таблиц, очищаемых по умолчанию
	ПометкаПоУмолчанию = Новый Соответствие;
	ПометкаПоУмолчанию.Вставить("РегистрацияИзменений", "РегистрацияИзменений");
	ПометкаПоУмолчанию.Вставить("РегистрацияИзмененийКонстанты", "РегистрацияИзмененийКонстанты");
	
	Для Каждого СтрокаТаблицы Из ТаблицаСтруктураБД Цикл
		
		СтрокаТаблицы.Пометка = ПометкаПоУмолчанию.Получить(СтрокаТаблицы.Назначение) <> Неопределено;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометку(Команда)
	
	УстановитьСнятьПометку(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьПометку(Команда)
	
	УстановитьСнятьПометку(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСнятьПометку(Флаг)
	
	ВыделенныеСтроки = Элементы.ТаблицаСтруктураБД.ВыделенныеСтроки;
	
	Для Каждого ВыделеннаяСтрока Из ВыделенныеСтроки Цикл
		
		СтрокаТаблицы = ТаблицаСтруктураБД.Получить(ВыделеннаяСтрока);
		
		СтрокаТаблицы.Пометка = Флаг;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьСкриптОчистки(Команда)
	
	ТелоСкрипта = Новый ТекстовыйДокумент;
		
	Отказ = Истина;
	
	// TODO: возможно, потребуется добавить генерацию скриптов и для других типов СУБД
	Если ТипСУБД = "MSSQL" Или ТипСУБД = "POSTGRES" Тогда
		
		// Шапка скрипта
		СтрокаСкрипта = НСтр("ru='/* *** Скрипт для очистки данных в таблицах ИБ ""%1"" *** */'");
		СтрокаСкрипта = СтрШаблон(СтрокаСкрипта, СтрокаСоединенияИнформационнойБазы());
		ТелоСкрипта.ДобавитьСтроку(СтрокаСкрипта);
		ТелоСкрипта.ДобавитьСтроку("");
		
		Для Каждого СтрокаТаблицы Из ТаблицаСтруктураБД Цикл
			
			Если Не СтрокаТаблицы.Пометка Тогда
				Продолжить;
			КонецЕсли;
			
			ТелоСкрипта.ДобавитьСтроку("");
			
			СтрокаСкрипта = НСтр("ru='/* Очистка таблицы %1 (Метаданные: ""%2""; назначение: ""%3""; имя таблицы: ""%4"") */'");
			СтрокаСкрипта = СтрШаблон(
				СтрокаСкрипта,
				СтрокаТаблицы.ИмяТаблицыХранения,
				СтрокаТаблицы.Метаданные,
				СтрокаТаблицы.Назначение,
				СтрокаТаблицы.ИмяТаблицы
			);
			ТелоСкрипта.ДобавитьСтроку(СтрокаСкрипта);
			
			Если ТипСУБД = "MSSQL" Тогда
				КомандаОчистки = "TRUNCATE TABLE _%1;";
			ИначеЕсли ТипСУБД = "POSTGRES" Тогда
				КомандаОчистки = "TRUNCATE %1;";
			КонецЕсли;
			
			КомандаОчистки = СтрШаблон(КомандаОчистки, СтрокаТаблицы.ИмяТаблицыХранения);
			ТелоСкрипта.ДобавитьСтроку(КомандаОчистки);
			
		КонецЦикла;
		
		ТелоСкрипта.ДобавитьСтроку("");
		СтрокаСкрипта = НСтр("ru='/* *** Конец скрипта *** */'");
		ТелоСкрипта.ДобавитьСтроку(СтрокаСкрипта);
		
		Отказ = Ложь;
		
	КонецЕсли;
	
	Если Отказ Тогда
		
		СтрокаСообщения = НСтр("ru='Для данного типа СУБД не реализован механизм генерации скрипта очистки данных'");
	    ПоказатьПредупреждение(,СтрокаСообщения);
		
		Возврат;
		
	КонецЕсли;
	
	ТелоСкрипта.Показать("Скрипт очистки таблиц");
	
КонецПроцедуры
